# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pdf_processor_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

from PySide2 import QtCore, QtGui, QtWidgets
import os

from PySide2.QtWidgets import QFormLayout, QLineEdit


class MyListWidget(QtWidgets.QListWidget):
  def __init__(self, parent):
    super(MyListWidget, self).__init__(parent)
    self.setAcceptDrops(True)
    self.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)

  def dragEnterEvent(self, event):
    if event.mimeData().hasUrls():
      event.acceptProposedAction()
    else:
      super(MyListWidget, self).dragEnterEvent(event)

  def dragMoveEvent(self, event):
    super(MyListWidget, self).dragMoveEvent(event)

  def dropEvent(self, event):
    icao = ''
    if event.mimeData().hasUrls():
      for url in event.mimeData().urls():
        widget = self.parent()
        base_path = widget.findChild(QtWidgets.QLabel, 'label_base_path')
        base_path.setText(os.path.dirname(url.path()))
        if os.path.splitext(url.path())[1] == '.pdf':
            item = QtWidgets.QListWidgetItem(os.path.splitext(os.path.basename(url.path()))[0])
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            item.setCheckState(QtCore.Qt.Checked)
            self.addItem(item)
            self.sortItems()
        else:
            print('Incorrect file type')
      event.acceptProposedAction()
    else:
      super(MyListWidget,self).dropEvent(event)

class Ui_MainWindow(object):

    def resource_path(self, relative_path):
        """ Get absolute path to resource, works for dev and for PyInstaller """
        try:
            # PyInstaller creates a temp folder and stores path in _MEIPASS
            base_path = sys._MEIPASS
        except Exception:
            base_path = os.path.abspath(".")

        return os.path.join(base_path, relative_path)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(533, 586)
        MainWindow.setWindowIcon(QtGui.QIcon(self.resource_path('icon.png')))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")


        self.label_base_path = QtWidgets.QLabel(self.centralwidget)
        self.label_base_path.setGeometry(QtCore.QRect(10, 10, 201, 21))
        self.label_base_path.setObjectName("label_base_path")

        self.label_icao = QtWidgets.QLabel(self.centralwidget)
        self.label_icao.setGeometry(QtCore.QRect(10, 40, 51, 16))
        self.label_icao.setObjectName("label_icao")

        self.lineEdit_icao = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_icao.setGeometry(QtCore.QRect(70, 40, 141, 21))
        self.lineEdit_icao.setObjectName("lineEdit_icao")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 63, 201, 20))
        self.label.setObjectName("label")

        self.listWidget_pdfs =MyListWidget(self.centralwidget)
        self.listWidget_pdfs.setGeometry(QtCore.QRect(10, 90, 201, 321))
        self.listWidget_pdfs.setAcceptDrops(True)
        self.listWidget_pdfs.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.listWidget_pdfs.setObjectName("listWidget_pdfs")


        self.pushButton_remove = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_remove.setGeometry(QtCore.QRect(10, 420, 121, 31))
        self.pushButton_remove.setObjectName("pushButton_remove")


        self.pushButton_clear = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_clear.setGeometry(QtCore.QRect(140, 420, 75, 31))
        self.pushButton_clear.setObjectName("pushButton_clear")

        self.checkBox_wef = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_wef.setGeometry(QtCore.QRect(220, 10, 70, 17))
        self.checkBox_wef.setChecked(True)
        self.checkBox_wef.setTristate(False)
        self.checkBox_wef.setObjectName("checkBox_wef")
        self.lineEdit_wef = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_wef.setGeometry(QtCore.QRect(380, 10, 133, 20))
        self.lineEdit_wef.setObjectName("lineEdit_wef")

        self.checkBox_vao = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_vao.setGeometry(QtCore.QRect(220, 40, 70, 17))
        self.checkBox_vao.setChecked(True)
        self.checkBox_vao.setObjectName("checkBox_vao")
        self.lineEdit_vao = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_vao.setGeometry(QtCore.QRect(380, 40, 133, 20))
        self.lineEdit_vao.setObjectName("lineEdit_vao")


        self.checkBox_country_icao_iata = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_country_icao_iata.setGeometry(QtCore.QRect(220, 70, 132, 17))
        self.checkBox_country_icao_iata.setChecked(True)
        self.checkBox_country_icao_iata.setObjectName("checkBox_country_icao_iata")
        self.lineEdit_country_icao_iata = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_country_icao_iata.setGeometry(QtCore.QRect(380, 70, 133, 20))
        self.lineEdit_country_icao_iata.setObjectName("lineEdit_country_icao_iata")

        self.checkBox_city = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_city.setGeometry(QtCore.QRect(220, 100, 132, 17))
        self.checkBox_city.setChecked(True)
        self.checkBox_city.setObjectName("checkBox_city")
        self.lineEdit_city = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_city.setGeometry(QtCore.QRect(380, 100, 133, 20))
        self.lineEdit_city.setText("")
        self.lineEdit_city.setObjectName("lineEdit_city")

        self.checkBox_ad_name = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_ad_name.setGeometry(QtCore.QRect(220, 130, 132, 17))
        self.checkBox_ad_name.setChecked(True)
        self.checkBox_ad_name.setObjectName("checkBox_ad_name")
        self.lineEdit_ad_name = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_ad_name.setGeometry(QtCore.QRect(380, 130, 133, 20))
        self.lineEdit_ad_name.setText("")
        self.lineEdit_ad_name.setObjectName("lineEdit_ad_name")

        self.checkBox_copyright = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_copyright.setGeometry(QtCore.QRect(220, 160, 132, 17))
        self.checkBox_copyright.setChecked(True)
        self.checkBox_copyright.setObjectName("checkBox_copyright")
        self.lineEdit_copyright = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_copyright.setGeometry(QtCore.QRect(380, 160, 133, 20))
        self.lineEdit_copyright.setObjectName("lineEdit_copyright")

        self.checkBox_proc_criteria = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_proc_criteria.setGeometry(QtCore.QRect(220, 190, 132, 17))
        self.checkBox_proc_criteria.setChecked(True)
        self.checkBox_proc_criteria.setObjectName("checkBox_proc_criteria")
        self.lineEdit_proc_criteria = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_proc_criteria.setGeometry(QtCore.QRect(380, 190, 133, 20))
        self.lineEdit_proc_criteria.setObjectName("lineEdit_proc_criteria")

        self.checkBox_amdt_num = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_amdt_num.setGeometry(QtCore.QRect(220, 220, 121, 17))
        self.checkBox_amdt_num.setChecked(False)
        self.checkBox_amdt_num.setObjectName("checkBox_amdt_num")
        self.lineEdit_amdt_num = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_amdt_num.setGeometry(QtCore.QRect(380, 220, 131, 21))
        self.lineEdit_amdt_num.setObjectName("lineEdit_amdt_num")


        self.pushButton_check = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_check.setGeometry(QtCore.QRect(220, 350, 291, 31))
        self.pushButton_check.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_check.setObjectName("pushButton_check")

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(140, 460, 47, 13))
        self.label_2.setObjectName("label_2")
        self.textBrowser_status = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_status.setGeometry(QtCore.QRect(10, 480, 201, 61))
        self.textBrowser_status.setObjectName("textBrowser_status")

        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(220, 390, 47, 13))
        self.label_3.setObjectName("label_3")
        self.textBrowser_results = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_results.setGeometry(QtCore.QRect(220, 410, 291, 91))
        self.textBrowser_results.setObjectName("textBrowser_results")


        self.pushButton_out_path = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_out_path.setGeometry(QtCore.QRect(440, 510, 71, 31))
        self.pushButton_out_path.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_out_path.setObjectName("pushButton_out_path")

        self.lineEdit_out_path = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_out_path.setGeometry(QtCore.QRect(220, 510, 201, 31))
        self.lineEdit_out_path.setText("")
        self.lineEdit_out_path.setObjectName("lineEdit_out_path")


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 533, 21))
        self.menubar.setObjectName("menubar")
        self.menuCommon_Data_Checking = QtWidgets.QMenu(self.menubar)
        self.menuCommon_Data_Checking.setObjectName("menuCommon_Data_Checking")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuCommon_Data_Checking.menuAction())


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PDF Checker"))
        self.checkBox_wef.setText(_translate("MainWindow", "WEF date"))
        self.checkBox_vao.setText(_translate("MainWindow", "VAO Date"))
        self.checkBox_country_icao_iata.setText(_translate("MainWindow", "Country - ICAO / IATA"))
        self.pushButton_check.setText(_translate("MainWindow", "Start Checking"))
        self.label.setText(_translate("MainWindow", "Drag and drop PDF files"))
        self.label_base_path.setText(_translate("MainWindow", "Base Path: Empty"))
        self.pushButton_remove.setText(_translate("MainWindow", "Remove selected files"))
        self.pushButton_clear.setText(_translate("MainWindow", "Clear All"))
        self.label_icao.setText(_translate("MainWindow", "ICAO"))
        self.checkBox_copyright.setText(_translate("MainWindow", "Copyright"))
        self.lineEdit_copyright.setText(_translate("MainWindow", "© NAVBLUE"))
        self.checkBox_proc_criteria.setText(_translate("MainWindow", "Procedure Criteria"))
        self.lineEdit_proc_criteria.setText(_translate("MainWindow", "PANS OPS"))
        self.label_2.setText(_translate("MainWindow", "Status"))
        self.label_3.setText(_translate("MainWindow", "Results"))
        self.checkBox_city.setText(_translate("MainWindow", "City"))
        self.checkBox_ad_name.setText(_translate("MainWindow", "Aerodrome Name"))
        self.checkBox_amdt_num.setText(_translate("MainWindow", "AMDT number"))

        self.menuCommon_Data_Checking.setTitle(_translate("MainWindow", "PDF checker"))
        self.pushButton_out_path.setText(_translate("MainWindow", "Out Path"))
        self.lineEdit_out_path.setText(_translate("MainWindow", "Out path"))


'''if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())'''
